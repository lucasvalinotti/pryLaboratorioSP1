<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>